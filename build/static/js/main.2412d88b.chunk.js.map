{"version":3,"sources":["components/LoginButton.js","components/LogoutButton.js","components/SignupButton.js","views/Header.js","components/Loading.js","components/Footer.js","views/Movie.js","views/Actor.js","components/Profile.js","use-api.js","views/Home.js","utils/initFontAwesome.js","App.js","serviceWorker.js","auth0-provider-with-history.js","index.js"],"names":["LoginButton","loginWithRedirect","useAuth0","onClick","variant","className","logout","SignupButton","screen_hint","Header","isAuthenticated","console","log","to","src","alt","type","LogoutButton","Loading","Footer","Movie","id","title","release_date","Actor","name","age","gender","Profile","opts","audience","scope","login","getTokenWithPopup","url","options","getAccessTokenSilently","useState","error","loading","data","state","setState","refreshIndex","setRefreshIndex","useEffect","a","fetchOptions","accessToken","fetch","headers","Authorization","res","json","refresh","useApi","users","getTokenAndTryAgain","message","map","user","index","key","Home","library","add","faLink","faUser","faPowerOff","initFontAwesome","App","Container","path","component","Boolean","window","location","hostname","match","Auth0ProviderWithHistory","children","history","useHistory","domain","process","clientId","redirectUri","origin","onRedirectCallback","appState","push","returnTo","pathname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.2412d88b.chunk.js","sourcesContent":["import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst LoginButton = () => {\n  const { loginWithRedirect } = useAuth0();\n  return (\n    <button\n      onClick={() => loginWithRedirect()}\n      variant=\"primary\"\n      className=\"btn-margin\"\n    >\n      Log In\n    </button>\n  );\n};\n\nexport default LoginButton;\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst LoginButton = () => {\n  const { logout } = useAuth0();\n  return (\n    <button onClick={() => logout()} variant=\"danger\" className=\"btn-margin\">\n      Log Out\n    </button>\n  );\n};\n\nexport default LoginButton;\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst SignupButton = () => {\n  const { loginWithRedirect } = useAuth0();\n  return (\n    <button\n      onClick={() =>\n        loginWithRedirect({\n          screen_hint: \"signup\",\n        })\n      }\n      variant=\"primary\"\n      className=\"btn-margin\"\n    >\n      Sign Up\n    </button>\n  );\n};\n\nexport default SignupButton;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport \"./Header.css\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport LoginButton from \"../components/LoginButton\";\nimport LogoutButton from \"../components/LogoutButton\";\nimport SignupButton from \"../components/SignupButton\";\n\nfunction Header() {\n  const { isAuthenticated } = useAuth0();\n  console.log(\">>>>>>>>>>\", isAuthenticated);\n\n  return (\n    <nav className=\"header\">\n      <Link to=\"/\">\n        <img\n          className=\"header__logo\"\n          src=\"http://pngimg.com/uploads/pyramid/pyramid_PNG1.png\"\n          alt=\"\"\n        />\n      </Link>\n      <Link to=\"/\" className=\"header__link\">\n        <span>Home</span>\n      </Link>\n      <Link to=\"/actors\" className=\"header__link\">\n        <span>Actors</span>\n      </Link>\n      <Link to=\"/movies\" className=\"header__link\">\n        <span>Movies</span>\n      </Link>\n      <div className=\"header__search\">\n        <input type=\"text\" className=\"header__searchInput\" />\n        <SearchIcon className=\"header__searchIcon\" />\n      </div>\n      <div className=\"header__nav\">\n        {isAuthenticated ? (\n          <LogoutButton />\n        ) : (\n          <div className=\"sign\">\n            <LoginButton />\n            <SignupButton />\n          </div>\n        )}\n        <Link to=\"/\" className=\"header__link\">\n          <div className=\"header__option\">\n            <span className=\"header__optionLineOne\">Returns</span>\n            <span className=\"header__optionLineTwo\">Orders</span>\n          </div>\n        </Link>\n        <Link to=\"/\" className=\"header__link\">\n          <div className=\"header__option\">\n            <span className=\"header__optionLineOne\">Your</span>\n            <span className=\"header__optionLineTwo\">Prime</span>\n          </div>\n        </Link>\n        <Link to=\"/checkout\" className=\"header__link\"></Link>\n      </div>\n    </nav>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nconst loading =\n  \"https://cdn.auth0.com/blog/auth0-react-sample/assets/loading.svg\";\n\nconst Loading = () => (\n  <div className=\"spinner\">\n    <img src={loading} alt=\"Loading\" />\n  </div>\n);\n\nexport default Loading;\n","import React from \"react\";\n\nconst Footer = () => (\n    <footer className='bg-light p-3 text-center'>\n        <p>Rogue Intel &copy; 2020</p>\n    </footer>\n);\n\nexport default Footer;\n","import React from \"react\";\nimport \"./Movie.css\";\n\nfunction Movie({ id, title, release_date }) {\n  return (\n    <div className=\"movie\">\n      <div className=\"movie__title\">\n        <p>{title}</p>\n      </div>\n      <div className=\"movie__releaseDate\">\n        <p>{release_date}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Movie;\n","import React from \"react\";\nimport \"./Actor.css\";\n\nfunction Actor({ id, name, age, gender }) {\n  return (\n    <div className=\"actor\">\n      <div className=\"actor__name\">{name}</div>\n      <div className=\"actor__age\">{age}</div>\n      <div className=\"actor__gender\">{gender}</div>\n    </div>\n  );\n}\n\nexport default Actor;\n","import React from \"react\";\nimport { useApi } from \"../use-api\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nexport const Profile = () => {\n  const opts = {\n    audience: \"http://localhost:5000/api\",\n    scope: \"get:actor\",\n  };\n  const { login, getTokenWithPopup } = useAuth0();\n  const { loading, error, refresh, data: users } = useApi(\n    \"http://localhost:5000\",\n    opts\n  );\n  const getTokenAndTryAgain = async () => {\n    await getTokenWithPopup(opts);\n    refresh();\n  };\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  if (error) {\n    if (error.error === \"login_required\") {\n      return <button onClick={() => login(opts)}>Login</button>;\n    }\n    if (error.error === \"consent_required\") {\n      return (\n        <button onClick={getTokenAndTryAgain}>Consent to reading users</button>\n      );\n    }\n    return <div>Oops {error.message}</div>;\n  }\n  return (\n    <ul>\n      {users.map((user, index) => {\n        return <li key={index}>{user}</li>;\n      })}\n    </ul>\n  );\n};\n","// use-api.js\nimport { useEffect, useState } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nexport const useApi = (url, options = {}) => {\n  const { getAccessTokenSilently } = useAuth0();\n  const [state, setState] = useState({\n    error: null,\n    loading: true,\n    data: null,\n  });\n  const [refreshIndex, setRefreshIndex] = useState(0);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const { audience, scope, ...fetchOptions } = options;\n        const accessToken = await getAccessTokenSilently({ audience, scope });\n        const res = await fetch(url, {\n          ...fetchOptions,\n          headers: {\n            ...fetchOptions.headers,\n            // Add the Authorization header to the existing headers\n            Authorization: `Bearer ${accessToken}`,\n          },\n        });\n        setState({\n          ...state,\n          data: await res.json(),\n          error: null,\n          loading: false,\n        });\n      } catch (error) {\n        setState({\n          ...state,\n          error,\n          loading: false,\n        });\n      }\n    })();\n  }, [refreshIndex]);\n\n  return {\n    ...state,\n    refresh: () => setRefreshIndex(refreshIndex + 1),\n  };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Movie from \"./Movie\";\nimport Actor from \"./Actor\";\nimport { Profile } from \"../components/Profile\";\nimport \"./Home.css\";\n\nfunction Home() {\n  return (\n    <div className=\"home\">\n      <div className=\"home__row\">\n        <Link to=\"/movies\">\n          <h2 className=\"home__movies\">Movies</h2>\n        </Link>\n        <Movie id=\"sdsds\" title=\"inception\" release_date=\"30-7-2013\" />\n        <Link to=\"/actors\">\n          <h2 className=\"home__actors\">Actors</h2>\n        </Link>\n\n        <Actor id=\"ffgg132\" name=\"Abdo\" age={20} gender=\"male\" />\n        <Profile />\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faLink, faPowerOff, faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction initFontAwesome() {\n  library.add(faLink);\n  library.add(faUser);\n  library.add(faPowerOff);\n}\n\nexport default initFontAwesome;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Container } from \"reactstrap\";\nimport Header from \"./views/Header\";\n\n// import PrivateRoute from \"./components/PrivateRoute\";\nimport Loading from \"./components/Loading\";\nimport Footer from \"./components/Footer\";\n// import logo from './logo.svg';\nimport \"./App.css\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Home from \"./views/Home\";\nimport Actor from \"./views/Actor\";\nimport Movie from \"./views/Movie\";\n\nimport initFontAwesome from \"./utils/initFontAwesome\";\ninitFontAwesome();\n\nfunction App() {\n  const { loading } = useAuth0();\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  return (\n    <div className=\"className='d-flex flex-column h-100\">\n      <Header />\n      <Container className=\"flex-grow-1 mt-5\">\n        <Switch>\n          <Route path=\"/\" component={Home} />\n          <Route path=\"/actors\" component={Actor} />\n          <Route path=\"/movies\" component={Movie} />\n        </Switch>\n      </Container>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nconst Auth0ProviderWithHistory = ({ children }) => {\n  const domain = process.env.REACT_APP_AUTH0_DOMAIN;\n  const clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n  const audience = process.env.REACT_APP_AUDIENCE;\n\n  const history = useHistory();\n\n  const onRedirectCallback = (appState) => {\n    history.push(appState?.returnTo || window.location.pathname);\n  };\n\n  return (\n    <Auth0Provider\n      domain={domain}\n      clientId={clientId}\n      redirectUri={window.location.origin}\n      onRedirectCallback={onRedirectCallback}\n      audience={audience}\n    >\n      {children}\n    </Auth0Provider>\n  );\n};\n\nexport default Auth0ProviderWithHistory;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Auth0ProviderWithHistory from \"./auth0-provider-with-history\";\n\nReactDOM.render(\n  <Router>\n    <Auth0ProviderWithHistory>\n      <App />\n    </Auth0ProviderWithHistory>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}